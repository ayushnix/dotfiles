# lf r26
# ------

# OPTIONS {{{

set hidden
set ifs "\n"
set info "size"
set number
set relativenumber
set timefmt "15:04 Mon _2 Jan 2006"
set previewer ~/.local/bin/prv

# }}}

# CUSTOM COMMANDS {{{

# copy the absolute path of a file
cmd copy-path $wl-copy -n $f

# copy the basename of a file
cmd copy-name $basename -a -- $f | wl-copy -n

# open with a specific program
cmd open-with &"$@" > /dev/null 2>&1 $fx

cmd mkdir ${{
    IFS=" "
    mkdir -p -- "$@"
}}

cmd touch ${{
    IFS=" "
    touch -- "$@"
}}

cmd chmod ${{
    chmod "$@" $fx
    lf -remote "send $id unselect"
    lf -remote "send $id reload"
}}

cmd chmod_exec ${{
    chmod 750 $fx
    lf -remote "send $id unselect"
    lf -remote "send $id reload"
}}

cmd bulkrename ${{
    ~/.local/bin/bulkr $fx
    lf -remote "send $id unselect"
}}

# custom trash command
# won't use gio trash/trash-cli, they don't allow changing trash location
$mkdir -p /data/others/.trash
cmd trash %{{
    printf "%s\n" " Do you want to trash the selected file(s)? [yY/nN] "
    read -r confirm
    case $confirm in
      y | Y) mv $fx /data/others/.trash ;;
      n | N) exit 0 ;;
    esac
}}

# to create links across clients, we need to use the copy/cut mode to keep the
# list of selected files in sync
cmd link %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        copy) ln -sr -t . -- "$@" ;;
        move) ln -t . -- "$@" ;;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}

# }}}

# MAPPINGS {{{
# x, b are still unbound

map <c-l>
map <c-l> load

map t trash
map D delete
map P link
map O push :open-with<space>
map i !~/.local/bin/prv $f

map ap copy-path
map an copy-name
map am push :mkdir<space>
map at push :touch<space>
map ac push :chmod<space>
map ax chmod_exec

map br bulkrename

# }}}

# vim:foldmethod=marker
